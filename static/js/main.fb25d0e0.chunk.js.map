{"version":3,"sources":["StarWars/services/SwapiService.js","StarWars/components/Spinner/Spinner.js","StarWars/components/RandomPlanet/PlanetView.js","StarWars/components/Error/Error.js","StarWars/components/RandomPlanet/RandomPlanet.js","StarWars/components/ItemList/ItemList.js","StarWars/components/ItemDetails/ItemDetails.js","StarWars/components/ItemPage/ItemPage.js","StarWars/components/app/app.js","DoctorWho/reducers/index.js","DoctorWho/service/DoctorWhoService.js","DoctorWho/const/const.js","DoctorWho/store.js","DoctorWho/components/Header/Header.js","DoctorWho/components/ItemList/ItemList.js","DoctorWho/components/Breadcrumbs/Breadcrumbs.js","DoctorWho/components/ItemDetails/ItemDetails.js","DoctorWho/components/ItemDescription/ItemDescription.js","DoctorWho/components/Page/Page.js","DoctorWho/components/MainContent/MainContent.js","DoctorWho/components/App/App.js","DoctorWho/index.js","App.js","index.js"],"names":["SwapiService","_apiBase","_imageBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","getPersonImage","getPlanetImage","getAllPlanets","_transformPlanet","getPlanet","_extractId","item","match","planet","name","population","rotationPeriod","rotation_period","diameter","person","gender","birthYear","birth_year","height","mass","Spinner","className","Component","PlanetView","src","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","updatePlanet","Math","round","random","then","catch","this","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","ItemList","itemList","onItemLoaded","getData","props","renderItems","arr","label","children","key","onClick","onItemSelected","items","Record","field","ItemDetails","image","updateItem","itemId","getImageUrl","prevProps","prevState","snapshot","style","width","React","Children","child","cloneElement","Row","left","right","ErrorBoundry","hasError","errorInfo","ItemPage","selectedItem","personDetails","initState","data","JSON","parse","categories","doctors","companions","details","race","family","birth","death","nickname","doings","wife","motherInLaw","fatherInLaw","test","reducer","action","type","payload","store","createStore","connect","links","Object","entries","link","title","to","category","categoryName","useParams","categoryTitle","img","alt","titlePage","linksList","breadcrumb","filter","Number","currentItem","index","detailKey","detailValue","subDetails","Array","isArray","value","push","detailsList","descriptionList","text","page","categoryListMain","path","exact","DoctorWhoApp","App","application","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb25d0e0.chunk.js","sourcesContent":["export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.dev/api';\r\n    _imageBase = 'https://starwars-visualguide.com/assets/img';\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(this._apiBase + url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Ссылка ${url} ` + `Ошибка ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllPeople = async () => {\r\n        const res = await this.getResource(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n\r\n    getPerson = async (id) => {\r\n        const res = await this.getResource(`/people/${id}`);\r\n        return this._transformPerson(res);\r\n    }\r\n\r\n    getPersonImage = ({ id }) => {\r\n        return `${this._imageBase}/characters/${id}.jpg`;\r\n    }\r\n\r\n    getPlanetImage = ({ id }) => {\r\n        return `${this._imageBase}/planets/${id}.jpg`;\r\n    }\r\n\r\n    getAllPlanets = async () => {\r\n        const res = await this.getResource(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n\r\n    getPlanet = async (id) => {\r\n        const res = await this.getResource(`/planets/${id}`);\r\n        return this._transformPlanet(res);\r\n    }\r\n\r\n    _extractId = (item) => {\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter,\r\n        }\r\n    }\r\n\r\n    _transformPerson = (person) => {\r\n        return {\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birth_year,\r\n            height: person.height,\r\n            mass: person.mass,\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './Spinner.css';\r\n\r\nclass Spinner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"spinner\">\r\n                <div></div>\r\n                <div></div>\r\n                <div>\r\n                    <div></div>\r\n                </div>\r\n                <div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst PlanetView = ({planet}) => {\r\n    const {\r\n        id,\r\n        name,\r\n        population,\r\n        rotationPeriod,\r\n        diameter,\r\n    } = planet;\r\n\r\n    return (\r\n        <>\r\n            <img src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n            <div>{ name }</div>\r\n            <div>{ population }</div>\r\n            <div>{ rotationPeriod }</div>\r\n            <div>{ diameter }</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlanetView;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            Упс... Произошла ошибка.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, {Component} from 'react';\r\nimport SwapiService from '../../services/SwapiService';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport PlanetView from './PlanetView';\r\nimport Error from '../Error/Error';\r\n\r\nclass RandomPlanet extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true,\r\n        error: false,\r\n    };\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false,\r\n        })\r\n    }\r\n\r\n    updatePlanet = () => {\r\n        const id = Math.round(1 + Math.random() * (25 - 1));\r\n        this.swapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePlanet()\r\n\r\n        this.interval = setInterval(this.updatePlanet, 7000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        const {planet, loading, error} = this.state;\r\n\r\n        const hasData = !(loading || error);\r\n\r\n        const errorMessage = error ? <Error /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = hasData ? <PlanetView planet={planet} /> : null;\r\n\r\n        return (\r\n            <div className=\"random-component\">\r\n                Component RandomPlanet <br />\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RandomPlanet;\r\n","import React, {Component} from 'react';\r\nimport SwapiService from '../../services/SwapiService';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Error from '../Error/Error';\r\n\r\nclass ItemList extends Component {\r\n\r\n    state = {\r\n        itemList: [],\r\n        loading: true,\r\n    };\r\n\r\n    onItemLoaded = () => {\r\n        const { getData } = this.props;\r\n\r\n        getData()\r\n            .then((itemList) => {\r\n                this.setState({\r\n                    itemList,\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onItemLoaded()\r\n    }\r\n\r\n    renderItems = (arr) => {\r\n        return arr.map((item) => {\r\n            const { id } = item;\r\n\r\n            const label = this.props.children(item);\r\n\r\n            return(\r\n                <li key={id}\r\n                    onClick={() => this.props.onItemSelected(id)}\r\n                >\r\n                    {label}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { itemList, loading } = this.state;\r\n\r\n        const items = this.renderItems(itemList)\r\n\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        return (\r\n            <div className=\"random-component\">\r\n                Component ItemList <br />\r\n                <ul>\r\n                    {items}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, {Component} from 'react';\r\nimport SwapiService from '../../services/SwapiService';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Error from '../Error/Error';\r\n\r\nconst Record = ({ item, field, label }) => {\r\n    return (\r\n        <div>\r\n            <span>{label}: </span>\r\n            <span>{item[field]}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Record\r\n}\r\n\r\nclass ItemDetails extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        item: {},\r\n        image: null,\r\n    };\r\n\r\n    updateItem = () => {\r\n        const { itemId, getData, getImageUrl } = this.props;\r\n        if (!itemId) {\r\n            return;\r\n        }\r\n\r\n        getData(itemId)\r\n            .then((item) => {\r\n                this.setState({\r\n                    item,\r\n                    image: getImageUrl(item),\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem()\r\n        // console.log(console.log(this.props))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem(this.props.itemId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { item, image } = this.state;\r\n\r\n        return (\r\n            <div className=\"person-details\">\r\n                PersonDetails <br/>\r\n                <img style={{width: '150px'}} src={image} />\r\n                {\r\n                    React.Children.map(this.props.children, (child) => {\r\n                            return React.cloneElement(child, {item});\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemDetails;\r\n","import React, {Component} from 'react';\r\nimport ItemList from \"../ItemList/ItemList\";\r\nimport ItemDetails, {Record} from \"../ItemDetails/ItemDetails\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\nimport Error from \"../Error/Error\";\r\n\r\nconst Row = ({ left, right }) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {left}\r\n            </div>\r\n            <div>\r\n                {right}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n       this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <Error />\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default class ItemPage extends Component {\r\n\r\n    render() {\r\n        const { selectedItem } = this.state;\r\n\r\n        const { getAllPeople, getPerson, getPlanet, getPersonImage, getPlanetImage } = this.swapiService;\r\n\r\n        const itemList = (\r\n            <ItemList\r\n                onItemSelected={this.onItemSelected}\r\n                getData={getAllPeople}\r\n            >\r\n                {({ name, gender, height }) => (`${name} (${gender}, ${height})`)}\r\n            </ItemList>\r\n        )\r\n\r\n\r\n\r\n        const personDetails = <ItemDetails\r\n            itemId={selectedItem}\r\n            getData={getPerson}\r\n            getImageUrl={getPersonImage}\r\n        >\r\n            <Record field=\"gender\" label=\"Gender\" />\r\n            <Record field=\"birthYear\" label=\"Birth Year\" />\r\n            <Record field=\"height\" label=\"Height\" />\r\n            <Record field=\"mass\" label=\"Mass\" />\r\n        </ItemDetails>\r\n\r\n        return (\r\n            <ErrorBoundry>\r\n                <Row left={itemList} right={personDetails}/>\r\n            </ErrorBoundry>\r\n        )\r\n    }\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        selectedItem: 3,\r\n    }\r\n\r\n    onItemSelected = (selectedItem) => {\r\n        this.setState({ selectedItem })\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport RandomPlanet from '../RandomPlanet/RandomPlanet';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport PersonDetails from '../ItemDetails/ItemDetails';\r\nimport ItemPage from '../ItemPage/ItemPage';\r\nimport Error from \"../Error/Error\";\r\nimport SwapiService from \"../../services/SwapiService\";\r\n\r\nclass StarWarsApp extends Component {\r\n\r\n    swapiService = new SwapiService();\r\n\r\n    state = {\r\n        showRandomPlanet: true,\r\n        hasError: false,\r\n    }\r\n    //\r\n    // componentDidCatch(error, errorInfo) {\r\n    //    this.setState({ hasError: true })\r\n    // }\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedPerson: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {showRandomPlanet, hasError} = this.state;\r\n\r\n        if (hasError) {\r\n            return <Error />\r\n        }\r\n\r\n        const randomPlanet = showRandomPlanet ? <RandomPlanet /> : null;\r\n\r\n        return (\r\n            <div>\r\n                {randomPlanet}\r\n                <ItemPage />\r\n                <>\r\n                    <ItemList\r\n                        onItemSelected={this.onItemSelected}\r\n                        getData={this.swapiService.getAllPlanets}\r\n                    >\r\n                        {(item) => (`${item.name} (${item.rotationPeriod})`)}\r\n                    </ItemList>\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StarWarsApp;","import {DATA_LOADED} from \"../const/const\";\r\nimport data from '../service/DoctorWhoService';\r\n\r\nconst categories = {\r\n    doctors: 'Доктор',\r\n    companions: 'Спутники'\r\n}\r\n\r\nconst details = {\r\n    gender: 'Пол',\r\n    race: 'Раса',\r\n    family: 'Семья',\r\n    planet: 'Планета',\r\n    birth: 'Рождение',\r\n    death: 'Смерть',\r\n    nickname: 'Прозвище',\r\n    doings: 'Занятия',\r\n    wife: 'Жена',\r\n    motherInLaw: 'Тёща',\r\n    fatherInLaw: 'Тесть',\r\n}\r\n\r\nconst initState = {\r\n    data: JSON.parse(data),\r\n    categories,\r\n    details,\r\n    test: null\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case DATA_LOADED:\r\n            return {\r\n                data: action.payload\r\n            }\r\n        case 'TEST_LOADED':\r\n            return {\r\n                test: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","const data = `{\r\n    \"doctors\": [\r\n        {\r\n            \"id\": 11,\r\n            \"name\": \"11й Доктор\",\r\n            \"img\": {\r\n                \"item\": \"doctors/11_doctor_item.jpg\",\r\n                \"page\": \"doctors/11_doctor_page.jpg\" \r\n            },\r\n            \"details\": {\r\n                \"gender\": \"Мужской\",\r\n                \"race\": [\r\n                    \"Галлифреец\",\r\n                    \"Повелитель Времени\"\r\n                ],\r\n                \"family\": {\r\n                    \"wife\": \"Ривер Сонг\",\r\n                    \"motherInLaw\": \"Эми Понд\",\r\n                    \"fatherInLaw\": \"Рори Уильямс\"\r\n                },\r\n                \"planet\": \"Галлифрей\",\r\n                \"birth\": \"в своей ТАРДИС после регенерации предыдущего воплощения из-за радиации\",\r\n                \"death\": \"900 лет осады Трензалора, получил новый цикл регенераций от Повелителей Времени\"\r\n            },\r\n            \"description\": [\r\n                {\r\n                    \"title\": \"Описание\",\r\n                    \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\"\r\n                },\r\n                {\r\n                    \"title\": \"Описание2\",\r\n                    \"text\": \"2Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 12,\r\n            \"name\": \"12й Доктор\",\r\n            \"img\": {\r\n                \"item\": \"doctors/12_doctor_item.jpg\",\r\n                \"page\": \"doctors/12_doctor_item.jpg\"\r\n            },\r\n            \"details\": {\r\n                \"gender\": \"Мужской\",\r\n                \"race\": [\r\n                    \"Галлифреец\",\r\n                    \"Повелитель Времени\"\r\n                ],\r\n                \"family\": {\r\n                    \"wife\": \"Ривер Сонг\"\r\n                },\r\n                \"planet\": \"Галлифрей\",\r\n                \"birth\": \"в своей ТАРДИС после 900-летней осады Трензалора и первой регенерации нового цикла\",\r\n                \"death\": \"регенерировал в своей ТАРДИС от повреждений после битвы с киберлюдьми, примирившись с нуждой перемены\"\r\n            },\r\n            \"description\": [\r\n                {\r\n                    \"title\": \"Описание\",\r\n                    \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"companions\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Эми Понд\",\r\n            \"img\": {\r\n                \"item\": \"companions/amy_pond_item.jpg\",\r\n                \"page\": \"companions/amy_pond_item.jpg\"\r\n            },\r\n            \"details\": {\r\n                \"nickname\": [\r\n                    \"Девочка, которая ждала\"\r\n                ],\r\n                \"doings\": [\r\n                    \"Киссограмма\",\r\n                    \"Модель\",\r\n                    \"Писатель\"\r\n                ],\r\n                \"gender\": \"Женский\",\r\n                \"race\": [\r\n                    \"Человек\"\r\n                ],\r\n                \"family\": {\r\n                    \"fatherInLaw\": \"Рори Уильямс\"\r\n                },\r\n                \"planet\": \"Земля\",\r\n                \"birth\": \"Шотландия, 1989\",\r\n                \"death\": \"Смерть\"\r\n            },\r\n            \"description\": [\r\n                {\r\n                    \"title\": \"Описание\",\r\n                    \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Клара Освальд\",\r\n            \"img\": {\r\n                \"item\": \"companions/clara_item.jpg\",\r\n                \"page\": \"companions/clara_item.jpg\" \r\n            },\r\n            \"details\": {\r\n                \"nickname\": [\r\n                    \"Девушка, умершая дважды\",\r\n                    \"Девочка с суфле\",\r\n                    \"Невозможная девчонка\"\r\n                ],\r\n                \"doings\": [\r\n                    \"Няня\",\r\n                    \"Учитель\"\r\n                ],\r\n                \"gender\": \"Женский\",\r\n                \"race\": [\r\n                    \"Человек\",\r\n                    \"Далек (одна из копий)\"\r\n                ],\r\n                \"family\": {\r\n                    \"wife\": \"Ривер Сонг\"\r\n                },\r\n                \"planet\": \"Земля\",\r\n                \"birth\": \"Блэкпул, 23 ноября 1986\",\r\n                \"death\": \"Лондон, первая половина 21 века\"\r\n            },\r\n            \"description\": [\r\n                {\r\n                    \"title\": \"Описание\",\r\n                    \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices gravida. Risus commodo viverra maecenas accumsan lacus vel facilisis.\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}`\r\n\r\nexport default data;","export const DATA_LOADED = 'DATA_LOADED';","import {createStore} from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Header = ({categories}) => {\r\n\r\n    const links = Object.entries(categories).map(([link, title]) => {\r\n        return <Link to={`/${link}`} key={link} className=\"header__link\">{title}</Link>\r\n    })\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <Link to=\"/\">\r\n                <img src=\"/images/logo.png\" className=\"header__logo\" />\r\n            </Link>\r\n            <nav className=\"header__menu\">\r\n                {links}\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({categories}) => {\r\n    return {categories};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport './ItemList.css';\r\n\r\nconst ItemList = ({data, category, categories}) => {\r\n    const routeParams = useParams();\r\n    const categoryName = routeParams.category || category;\r\n    const categoryTitle = categories[categoryName];\r\n\r\n    const items = data[categoryName].map((item) => {\r\n        const image = `/images/${item.img.item}`;\r\n\r\n        return(\r\n            <Link to={`/${categoryName}/${item.id}`}\r\n                  key={item.id}\r\n                  className=\"category__item\"\r\n            >\r\n                <img className=\"category__img\" src={image} alt={item.name} />\r\n                <div className=\"category__name\">{item.name}</div>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className=\"category\">\r\n            <h2 className=\"title\">{categoryTitle}:</h2>\r\n            <div className=\"category__items\">{items}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({data, categories}) => {\r\n    return {data, categories};\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemList);","import React from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport './Breadcrumbs.css'\r\n\r\nconst Breadcrumbs = ({categories, titlePage}) => {\r\n    const {category, id} = useParams();\r\n\r\n    const breadcrumbs = [\r\n        {link: '/', title: 'Главная'},\r\n        {link: `/${category}`, title: categories[category]},\r\n        {link: `/${category}/${id}`, title: titlePage}\r\n    ]\r\n\r\n    const linksList = breadcrumbs.map((breadcrumb) => {\r\n        return <Link to={breadcrumb.link} key={breadcrumb.title} className=\"breadcrumbs__link\">{breadcrumb.title}</Link>\r\n    })\r\n\r\n    return <div className=\"breadcrumbs\">{linksList}</div>\r\n}\r\n\r\nconst mapStateToProps = ({categories}) => {\r\n    return {categories}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Breadcrumbs);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {useParams} from \"react-router-dom\";\r\nimport './ItemDetails.css';\r\n\r\nconst ItemDetails = ({data, details}) => {\r\n    const {id, category} = useParams();\r\n\r\n    const [currentItem] = data[category].filter((item) => {\r\n        return item.id === Number(id);\r\n    })\r\n\r\n    const itemList = Object.entries(currentItem['details']).map(([detailKey, detailValue], index) => {\r\n        let subDetails = []\r\n\r\n        if (typeof detailValue !== 'string') {\r\n            if (Array.isArray(detailValue)) {\r\n                detailValue.map((value) => {\r\n                    subDetails.push(<div key={value} className=\"details__subitem\">{value}</div>)\r\n                })\r\n            } else {\r\n                Object.entries(detailValue).map(([key, value]) => {\r\n                    subDetails.push(<div key={key} className=\"details__subitem\">{details[key]}: {value}</div>)\r\n                })\r\n            }\r\n        }\r\n\r\n        const detailsList = typeof detailValue === 'string' ? detailValue : subDetails;\r\n\r\n        return <div key={index} className=\"details__item\">{details[detailKey]}: {detailsList}</div>\r\n    })\r\n\r\n    return(\r\n        <div className=\"details\">{itemList}</div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({data, details}) => {\r\n    return {data, details};\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemDetails);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {useParams} from \"react-router-dom\";\r\nimport './ItemDescription.css';\r\n\r\nconst ItemDescription = ({data}) => {\r\n    const {id, category} = useParams();\r\n\r\n    const [currentItem] = data[category].filter((item) => {\r\n        return item.id === Number(id);\r\n    })\r\n\r\n    const descriptionList = currentItem['description'].map((item) => {\r\n        return(\r\n            <div key={item.title} className=\"description__block\">\r\n                <div className=\"description__title\">{item.title}:</div>\r\n                <div className=\"description__text\">{item.text}</div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className=\"description\">\r\n            {descriptionList}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({data}) => {\r\n    return {data};\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemDescription);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {useParams} from \"react-router-dom\";\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\nimport ItemDetails from \"../ItemDetails/ItemDetails\";\r\nimport ItemDescription from \"../ItemDescription/ItemDescription\";\r\nimport './Page.css';\r\n\r\nconst Page = ({data}) => {\r\n    const {id, category} = useParams();\r\n    const [item] = data[category].filter((category) => {\r\n        return category.id === Number(id);\r\n    });\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            <Breadcrumbs titlePage={item.name} />\r\n            <div className=\"page__block\">\r\n                <div className=\"page__cell\">\r\n                    <div className=\"page__title\">{item.name}</div>\r\n                    <div className=\"page__info\">\r\n                        <ItemDetails />\r\n                        <ItemDescription />\r\n                    </div>\r\n                </div>\r\n                <div className=\"page__cell\">\r\n                    <img src={`/images/${item.img.page}`} className=\"page__img\" alt={item.name} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({data}) => {\r\n    return {data};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Page);","import React, {Component} from \"react\";\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {Switch, Route, useParams} from 'react-router-dom';\r\nimport ItemList from \"../ItemList/ItemList\";\r\nimport Page from \"../Page/Page\";\r\n\r\nconst MainContent = ({categories}) => {\r\n\r\n    const categoryListMain = Object.entries(categories).map(([link]) => {\r\n        return <ItemList key={link} category={link} />\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {categoryListMain}\r\n                </Route>\r\n                <Route path=\"/:category\" exact>\r\n                    <ItemList />\r\n                </Route>\r\n                <Route path=\"/:category/:id\">\r\n                    <Page />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({categories}) => {\r\n    return {categories};\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainContent);","import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport MainContent from \"../MainContent/MainContent\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst App = () => {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <Header />\r\n            <MainContent />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({data}) => {\r\n    return {data};\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);","import React, {Component} from \"react\";\r\nimport {Provider} from 'react-redux';\r\nimport store from \"./store\";\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport App from \"./components/App/App\";\r\nimport './index.css';\r\n\r\nconst DoctorWhoApp = () => {\r\n\r\n    return(\r\n        <Provider store={store}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default DoctorWhoApp;","import React, {Component} from 'react';\r\n// import QuizApp from './QuizApp';\r\n// import CarApp from './CarApp';\r\n// import RouterApp from './RouterApp';\r\nimport StarWarsApp from './StarWars/components/app/app';\r\nimport DoctorWhoApp from './DoctorWho/index';\r\n// import TodoApp from './TodoApp';\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {/*<QuizApp />*/}\r\n                {/*<CarApp />*/}\r\n                {/*<RouterApp />*/}\r\n                {/*<TodoApp />*/}\r\n                {/*<StarWarsApp />*/}\r\n                <DoctorWhoApp />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n// import {createStore} from \"redux\";\r\n// import allReducers from './reducers/index'\r\n\r\n// const store = createStore(allReducers);\r\n\r\nconst application = (\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n)\r\n\r\nReactDOM.render(\r\n    application,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}